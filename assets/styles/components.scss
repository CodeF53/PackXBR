:root {
  // colors
  @for $i from 0 through 4 {
    $v: 20 + $i * 10;
    --elv#{$i}: #{rgb($v, $v, $v)};
  }
  --accent: #ff1616;

  --border-radius: .5rem;

  // progress and input[type=range]
  --bar-background: var(--elv0);
  --bar-height: .5rem;
  --bar-width: 10rem;
}

input, select, button {
  border: unset;
  border-radius: var(--border-radius);
  &:disabled { background-color: var(--elv0); }
  background-color: var(--elv1);
  &:hover { background-color: var(--elv2); }
  &:active { background-color: var(--elv3); }
}

// custom progressbar
progress {
  // background
  &, &::-webkit-progress-bar {
    background-color: var(--bar-background);
    border: none;
    border-radius: var(--border-radius);
    overflow: hidden;
    height: var(--bar-height);
    width: var(--bar-width);
  }

  // the bit that slides
  &::-moz-progress-bar      { background-color: var(--accent); }
  &::-webkit-progress-value { background-color: var(--accent); }

  // indeterminate state
  &:not([value]) {
    // 30% of the bar filled with accent, bouncing left and right
    @mixin fill() {
      background: linear-gradient(90deg, var(--accent) 30%, transparent 30%);
      animation: bounce 1.75s linear infinite;
    }
    @keyframes bounce { 50% { translate: 70% 0 } }

    &::-moz-progress-bar { @include fill() }
    // you can't use animations in side of chrome's `-webkit-progress-value`, so we just use ::after
    position: relative;
    &::after {
      content: ''; position: absolute;
      top: 0; right: 0; bottom: 0; left: 0;
      @include fill();
    }
  }
}
